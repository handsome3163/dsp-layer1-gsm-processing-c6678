<?xml version="1.0" encoding="UTF-8"?>

<resource.explorer version="1.0" name="SYS/BIOS" dir="" href="http://processors.wiki.ti.com/index.php/Category:SYSBIOS">

    <content name="Getting Started Guide" href="D:/TInew/bios_6_37_02_27/docs/Bios_Getting_Started_Guide.pdf">
	<type>weblink</type>
    </content>
    <content name="Users Guide" href="D:/TInew/bios_6_37_02_27/docs/Bios_User_Guide.pdf">
	<type>weblink</type>
    </content>
    <content name="Legacy Applications note" href="D:/TInew/bios_6_37_02_27/docs/Bios_Legacy_App_Note.pdf">
	<type>weblink</type>
    </content>
	<contents name="C6000" desc="C6000" icon="plugin://icons/obj16/devices.png">
		<contents name="Generic devices" desc="Generic devices" icon="plugin://icons/obj16/devices.png">
			<contents name="Generic C64x+ Device" desc="Generic C64x+ Device" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265286988802151">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C64x+ Device</tag>
					<tag>Generic devices</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265286988802151"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265286988802151"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287043224890">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C64x+ Device</tag>
					<tag>Generic devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287043224890"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287043224890"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287043224890"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287043224890"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287043224890"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287043224890"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287043224890"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287043224890"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287043224890"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287043224890"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287043224890"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287043224890"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="Generic C66xx Device" desc="Generic C66xx Device" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287050378502">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C66xx Device</tag>
					<tag>Generic devices</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287050378502"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287050378502"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287051034399">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C66xx Device</tag>
					<tag>Generic devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287051034399"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287051034399"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287051034399"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287051034399"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287051034399"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287051034399"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287051034399"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287051034399"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287051034399"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287051034399"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287051034399"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287051034399"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="Generic C674x Device" desc="Generic C674x Device" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287054704194">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C674x Device</tag>
					<tag>Generic devices</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287054704194"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287054704194"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287055232271">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C674x Device</tag>
					<tag>Generic devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287055232271"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287055232271"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287055232271"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287055232271"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287055232271"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287055232271"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287055232271"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287055232271"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287055232271"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287055232271"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287055232271"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287055232271"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="C64xx Multicore DSP" desc="C64xx Multicore DSP" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMC6472" desc="EVMC6472" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287061366737">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6472</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287061366737"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287061366737"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287061721587">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6472</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287061721587"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287061721587"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287061721587"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287061721587"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287061721587"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287061721587"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287061721587"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287061721587"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287061721587"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287061721587"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287061721587"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287061721587"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472.EVMC6472"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMDSEVM6474L" desc="TMDSEVM6474L" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287065444562">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMDSEVM6474L</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287065444562"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287065444562"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287065759294">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMDSEVM6474L</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287065759294"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287065759294"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287065759294"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287065759294"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287065759294"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287065759294"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287065759294"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287065759294"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287065759294"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287065759294"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287065759294"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287065759294"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMDSEVM6474L"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474.TMDSEVM6474L"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6472" desc="TMS320C6472" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287067852321">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6472</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287067852321"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287067852321"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287068159588">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6472</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287068159588"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287068159588"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287068159588"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287068159588"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287068159588"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287068159588"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287068159588"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287068159588"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287068159588"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287068159588"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287068159588"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287068159588"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6472"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6472"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6474" desc="TMS320C6474" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287070400651">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6474</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287070400651"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287070400651"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287071164466">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6474</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287071164466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287071164466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287071164466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287071164466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287071164466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287071164466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287071164466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287071164466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287071164466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287071164466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287071164466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287071164466"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6474"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320C6474"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320TCI6486" desc="TMS320TCI6486" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287073236034">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6486</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287073236034"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287073236034"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287073595860">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6486</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287073595860"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287073595860"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287073595860"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287073595860"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287073595860"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287073595860"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287073595860"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287073595860"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287073595860"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287073595860"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287073595860"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287073595860"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320TCI6486"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6486"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320TCI6487" desc="TMS320TCI6487" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287077165513">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6487</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287077165513"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287077165513"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287077438881">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6487</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287077438881"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287077438881"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287077438881"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287077438881"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287077438881"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287077438881"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287077438881"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287077438881"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287077438881"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287077438881"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287077438881"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287077438881"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320TCI6487"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6487"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320TCI6488" desc="TMS320TCI6488" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287079168038">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6488</tag>
					<tag>C64xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287079168038"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287079168038"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287079424924">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320TCI6488</tag>
					<tag>C64xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287079424924"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287079424924"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287079424924"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287079424924"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287079424924"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287079424924"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287079424924"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287079424924"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287079424924"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287079424924"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287079424924"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287079424924"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320TCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.TMS320TCI6488"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="C66xx Multicore DSP" desc="C66xx Multicore DSP" icon="plugin://icons/obj16/devices.png">
			<contents name="TCI6608" desc="TCI6608" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287081353743">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6608</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287081353743"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287081353743"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287081622758">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6608</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287081622758"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287081622758"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287081622758"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287081622758"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287081622758"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287081622758"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287081622758"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287081622758"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287081622758"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287081622758"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287081622758"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287081622758"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6608"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6608"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6614" desc="TCI6614" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287084793087">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6614</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287084793087"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287084793087"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287085095067">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6614</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287085095067"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287085095067"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287085095067"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287085095067"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287085095067"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287085095067"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287085095067"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287085095067"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287085095067"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287085095067"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287085095067"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287085095067"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6614"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6614"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6616" desc="TCI6616" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287086858435">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6616</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287086858435"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287086858435"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287087107856">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6616</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287087107856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287087107856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287087107856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287087107856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287087107856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287087107856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287087107856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287087107856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287087107856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287087107856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287087107856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287087107856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6616"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6616"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6618" desc="TCI6618" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287088399437">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6618</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287088399437"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287088399437"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287088583549">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6618</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287088583549"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287088583549"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287088583549"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287088583549"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287088583549"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287088583549"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287088583549"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287088583549"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287088583549"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287088583549"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287088583549"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287088583549"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6618"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6618"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6654" desc="TMS320C6654" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287089853982">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6654</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287089853982"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287089853982"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287090044003">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6654</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287090044003"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287090044003"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287090044003"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287090044003"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287090044003"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287090044003"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287090044003"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287090044003"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287090044003"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287090044003"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287090044003"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287090044003"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6654"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6654"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6655" desc="TMS320C6655" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287092625299">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6655</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287092625299"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287092625299"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287092815320">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6655</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287092815320"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287092815320"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287092815320"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287092815320"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287092815320"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287092815320"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287092815320"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287092815320"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287092815320"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287092815320"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287092815320"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287092815320"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6655"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6655"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6657" desc="TMS320C6657" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287094020132">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6657</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287094020132"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287094020132"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287094207664">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6657</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287094207664"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287094207664"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287094207664"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287094207664"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287094207664"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287094207664"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287094207664"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287094207664"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287094207664"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287094207664"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287094207664"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287094207664"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6657"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6657"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6670" desc="TMS320C6670" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287095415898">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6670</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287095415898"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287095415898"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287095592856">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6670</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287095592856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287095592856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287095592856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287095592856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287095592856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287095592856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287095592856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287095592856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287095592856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287095592856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287095592856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287095592856"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6670"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6670"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6671" desc="TMS320C6671" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287096826280">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6671</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287096826280"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287096826280"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287097967338">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6671</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287097967338"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287097967338"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287097967338"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287097967338"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287097967338"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287097967338"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287097967338"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287097967338"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287097967338"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287097967338"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287097967338"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287097967338"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6671"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6671"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6672" desc="TMS320C6672" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287099171528">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6672</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287099171528"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287099171528"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287099347865">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6672</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287099347865"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287099347865"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287099347865"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287099347865"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287099347865"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287099347865"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287099347865"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287099347865"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287099347865"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287099347865"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287099347865"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287099347865"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6672"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6672"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6674" desc="TMS320C6674" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287100500429">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6674</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287100500429"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287100500429"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287100674278">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6674</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287100674278"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287100674278"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287100674278"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287100674278"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287100674278"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287100674278"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287100674278"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287100674278"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287100674278"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287100674278"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287100674278"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287100674278"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6674"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6674"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TMS320C6678" desc="TMS320C6678" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287101858875">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6678</tag>
					<tag>C66xx Multicore DSP</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287101858875"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287101858875"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287102033346">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TMS320C6678</tag>
					<tag>C66xx Multicore DSP</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287102033346"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287102033346"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287102033346"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287102033346"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287102033346"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287102033346"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287102033346"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287102033346"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287102033346"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287102033346"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287102033346"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287102033346"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TMS320C6678"/>
							<attribute key="device.variant" value="TMS320C66XX.TMS320C6678"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="TMS320C64XX" desc="TMS320C64XX" icon="plugin://icons/obj16/devices.png">
			<contents name="EVMC6474" desc="EVMC6474" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287104527562">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6474</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287104527562"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287104527562"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287104792222">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMC6474</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287104792222"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287104792222"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287104792222"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287104792222"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287104792222"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287104792222"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287104792222"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287104792222"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287104792222"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287104792222"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287104792222"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287104792222"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMC6474"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMC6474"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="EVMTCI6488" desc="EVMTCI6488" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287106003565">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMTCI6488</tag>
					<tag>TMS320C64XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287106003565"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287106003565"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287106175859">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>EVMTCI6488</tag>
					<tag>TMS320C64XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287106175859"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287106175859"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287106175859"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287106175859"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287106175859"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287106175859"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287106175859"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287106175859"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287106175859"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287106175859"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287106175859"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287106175859"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_EVMTCI6488"/>
							<attribute key="device.variant" value="TMS320C64XX.EVMTCI6488"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
		<contents name="TMS320C66XX" desc="TMS320C66XX" icon="plugin://icons/obj16/devices.png">
			<contents name="66AK2H06" desc="66AK2H06" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287107366054">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>66AK2H06</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287107366054"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287107366054"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287107536171">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>66AK2H06</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287107536171"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287107536171"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287107536171"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287107536171"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287107536171"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287107536171"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287107536171"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287107536171"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287107536171"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287107536171"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287107536171"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287107536171"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_66AK2H06"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H06"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="66AK2H12" desc="66AK2H12" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287109964144">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>66AK2H12</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287109964144"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287109964144"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287110148256">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>66AK2H12</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287110148256"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287110148256"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287110148256"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287110148256"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287110148256"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287110148256"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287110148256"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287110148256"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287110148256"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287110148256"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287110148256"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287110148256"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_66AK2H12"/>
							<attribute key="device.variant" value="TMS320C66XX.66AK2H12"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6634K2K" desc="TCI6634K2K" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287111282782">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6634K2K</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287111282782"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287111282782"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287111449478">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6634K2K</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287111449478"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287111449478"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287111449478"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287111449478"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287111449478"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287111449478"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287111449478"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287111449478"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287111449478"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287111449478"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287111449478"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287111449478"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6634K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6634K2K"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6636K2H" desc="TCI6636K2H" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287112551038">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6636K2H</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287112551038"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287112551038"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287112719911">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6636K2H</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287112719911"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287112719911"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287112719911"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287112719911"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287112719911"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287112719911"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287112719911"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287112719911"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287112719911"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287112719911"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287112719911"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287112719911"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6636K2H"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6636K2H"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
			<contents name="TCI6638K2K" desc="TCI6638K2K" icon="plugin://icons/obj16/devices.png">
				<filter id="filter_265287113868432">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6638K2K</tag>
					<tag>TMS320C66XX</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_265287113868432"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dyanamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="D:\TInew\bios_6_37_02_27\resources\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_265287113868432"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_265287114042903">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>TCI6638K2K</tag>
					<tag>TMS320C66XX</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_265287114042903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_265287114042903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_265287114042903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_265287114042903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_265287114042903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_265287114042903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_265287114042903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_265287114042903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_265287114042903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_265287114042903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_265287114042903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="D:\TInew\bios_6_37_02_27\resources\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_265287114042903"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_TCI6638K2K"/>
							<attribute key="device.variant" value="TMS320C66XX.TCI6638K2K"/>
						</attributes>
					</type>
				</content>
				</contents>
			</contents>
		</contents>
	</contents>

</resource.explorer>
